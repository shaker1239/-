<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qibla</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            height: 100vh;
        }
        .compass {
            position: relative;
            width: 320px;
            height: 320px;
            border-radius: 50%;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            margin: auto;
        }
        .compass  .arrow{
            position: absolute;
            width: 0;
            height: 0;
            top: -20px;
            left: 50%;
            transform: translateX(-50%);
            border-style: solid;
            border-width: 30px 20px 0 20px;
            border-color: red transparent transparent transparent;
            z-index: 1;
        }
        .compass .compass-circle,
        .compass .my-point{
            position: absolute;
            width: 90%;
            height: 90%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            transition: transform 0.1s ease-out;
            background: url(https://d.top4top.io/p_22108ujfb1.png) center no-repeat;
            background-size: contain;
        }
        .compass .my-point{
            opacity: 0;
            width: 20%;
            height: 20%;
            background: rgb(8, 223, 69);
            border-radius: 50%;
            transition:  opacity 0.5s ease-out;
        }
        .start-btn{
            margin-bottom: auto;
        }
    </style>
</head>
<body>
    <div class="compass">
        <div class="arrow"></div>
        <div class="compass-circle"></div>
        <div class="my-point"></div>
    </div>
    <button class="start-btn">Start compass</button>
</body>
<script>
    const compassCircle =document.querySelector(".compass-circle");
    const myPoint =document.querySelector(".my-point");
    const startBtn = document.querySelector(".start-btn");
    const isIOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/)&& navigator.userAgent.match(/AppleWebKit/);
    function init(){
        startBtn.addEventListener("click", startCompass);
        navigator.geolocation.getCurrentPosition(locationHandler);
        
        if(!isIOS){
            window.addEventListener("deviceorientationabsolute", handler, true);
        }
    }

    function startCompass(){
        if(isIOS) {
            DeviceOrientationEvent.requsePermission().then((response) =>{
                if (response === "granted"){
                    window.addEventListener("deviceorientation", handler ,true);
                }else {
                    alert("has to be allowed");
                }
            })
            .catch(() => alert("not supported"));
        }
    }

  function handler(e){
    compass = e.webkitCompassHeading || Math.abs(e.alpha -360);
    compassCircle.style.transform = `translate(-50%, -50%) rotate(${-compass}deg)`;

    
    if(
        (pointDegree < Math.abs(compass)&& pointDegree + 15 > Math.abs(compass)) || 
        pointDegree > math.abs(compass + 15) || 
        pointDegree < Math.abs(compass)
    ){
        myPoint.style.opacity = 0;
    } else if (pointDegree){
        myPoint.style.opacity = 1;
    }
  }

let pointDegree;

function locationHandler(position){
    const {latitude, longitude } = position.coords;
    pointDegree = calcDegreeToPoint(latitude, longitude);

    if(pointDegree < 0){
        pointDegree = pointDegree +360;
    }
}

function calcDegreeToPoint(latitude, longitude){
    const point = {
        lat: 21.422487,
        lng: 39.826206
    };

    const phik = (point.lat * Math.PI) / 180.0;
    const lambdak = (point.lng * Math.PI) / 180.0;
    const phi = (latitude * Math.PI) / 180.0;
    const lambda= (longitude * Math.PI) / 180.0;

    const psi = (180.0 / Math.PI) * Math.atan2 (Math.sin (lambdak - lambda),
    Math.cos(phi)* Math.tan(phik) - Math.sin(phi) * Math.cos(lambdak - lambda));
    return Math.round(psi);
}

init();

</script>
</html>